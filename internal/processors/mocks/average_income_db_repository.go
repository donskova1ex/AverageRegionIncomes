// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/donskova1ex/AverageRegionIncomes/internal/processors (interfaces: AverageIncomeDBRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/donskova1ex/AverageRegionIncomes/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// AverageIncomeDBRepository is a mock of AverageIncomeDBRepository interface.
type AverageIncomeDBRepository struct {
	ctrl     *gomock.Controller
	recorder *AverageIncomeDBRepositoryMockRecorder
}

// AverageIncomeDBRepositoryMockRecorder is the mock recorder for AverageIncomeDBRepository.
type AverageIncomeDBRepositoryMockRecorder struct {
	mock *AverageIncomeDBRepository
}

// NewAverageIncomeDBRepository creates a new mock instance.
func NewAverageIncomeDBRepository(ctrl *gomock.Controller) *AverageIncomeDBRepository {
	mock := &AverageIncomeDBRepository{ctrl: ctrl}
	mock.recorder = &AverageIncomeDBRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *AverageIncomeDBRepository) EXPECT() *AverageIncomeDBRepositoryMockRecorder {
	return m.recorder
}

// GetRegionIncomes mocks base method.
func (m *AverageIncomeDBRepository) GetRegionIncomes(arg0 context.Context, arg1, arg2, arg3 int32) (*domain.AverageRegionIncomes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegionIncomes", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.AverageRegionIncomes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegionIncomes indicates an expected call of GetRegionIncomes.
func (mr *AverageIncomeDBRepositoryMockRecorder) GetRegionIncomes(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegionIncomes", reflect.TypeOf((*AverageIncomeDBRepository)(nil).GetRegionIncomes), arg0, arg1, arg2, arg3)
}
