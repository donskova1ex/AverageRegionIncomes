// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/donskova1ex/AverageRegionIncomes/internal/processors (interfaces: AverageIncomeRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/donskova1ex/AverageRegionIncomes/internal/domain"
	gomock "github.com/golang/mock/gomock"
)

// AverageIncomeRepository is a mock of AverageIncomeRepository interface.
type AverageIncomeRepository struct {
	ctrl     *gomock.Controller
	recorder *AverageIncomeRepositoryMockRecorder
}

// AverageIncomeRepositoryMockRecorder is the mock recorder for AverageIncomeRepository.
type AverageIncomeRepositoryMockRecorder struct {
	mock *AverageIncomeRepository
}

// NewAverageIncomeRepository creates a new mock instance.
func NewAverageIncomeRepository(ctrl *gomock.Controller) *AverageIncomeRepository {
	mock := &AverageIncomeRepository{ctrl: ctrl}
	mock.recorder = &AverageIncomeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *AverageIncomeRepository) EXPECT() *AverageIncomeRepositoryMockRecorder {
	return m.recorder
}

// GetRegionIncomes mocks base method.
func (m *AverageIncomeRepository) GetRegionIncomes(arg0 context.Context, arg1, arg2, arg3 int32) (*domain.AverageRegionIncomes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRegionIncomes", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(*domain.AverageRegionIncomes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRegionIncomes indicates an expected call of GetRegionIncomes.
func (mr *AverageIncomeRepositoryMockRecorder) GetRegionIncomes(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRegionIncomes", reflect.TypeOf((*AverageIncomeRepository)(nil).GetRegionIncomes), arg0, arg1, arg2, arg3)
}
